<!-- dashboard.ejs -->

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.7/tailwind.min.css">
</head>

<body class="bg-gray-700 text-white">
    <% if (admin) { %>
        <%- include("navbar", { user: admin }); -%>
            <% } else { %>
                <%- include("navbar", {user:users[0]}); -%>
                    <% } %>
                        <div class=" flex flex-column h-screen   bg-gray-800 text-white ">
                            <% users.forEach(function(user) { %>
                                <div class="max-w-screen-md mx-auto">
                                    <div class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
                                        <div class="mb-4">
                                            <label class="block text-gray-700 text-sm font-bold mb-2"
                                                for="username">Username:</label>
                                            <input
                                                class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                                                type="text" name="username" id="username" value="<%= user.username %>"
                                                required>
                                        </div>
                                        <input type="hidden" name="token" value="<%= user.token %>" id="token">
                                        <div class="mb-4">
                                            <label class="block text-gray-700 text-sm font-bold mb-2"
                                                for="email">Email:</label>
                                            <input
                                                disabled
                                                class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                                                type="email" name="email" id="email" value="<%= user.email %>" required>
                                        </div>

                                        <div class="mb-4">
                                            <label class="block text-gray-700 text-sm font-bold mb-2"
                                                for="lastAccessed">Last Login:</label>
                                            <label
                                                class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                                                <%= user.lastAccessed %>
                                            </label>
                                        </div>

                                        <div class="mb-4">
                                            <label class="block text-gray-700 text-sm font-bold mb-2"
                                                for="createdAt">Created At:</label>
                                            <label
                                                class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                                                <%= user.createdAt %>
                                            </label>
                                        </div>
                                        <div class="flex items-center justify-between">
                                            <button onclick="updateForm()"
                                                class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
                                                Update
                                            </button>
                                        </div>
                                        <div class="mb-4">
                                            <label class="block text-gray-700 text-sm font-bold mb-2"
                                                for="createdAt">Old Password</label>
                                            <input
                                                class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                                                type="password" name="password" id="password">
                                        </div>
                                        <div class="mb-4">
                                            <label class="block text-gray-700 text-sm font-bold mb-2"
                                                for="createdAt">New Password</label>
                                            <input
                                                class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                                                type="password" name="newPassword" id="newPassword">
                                        </div>


                                        <div class="flex items-center justify-between">
                                            <button onclick="updatePassword()"
                                                class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
                                                Update Password
                                            </button>
                                        </div>
                                        <div class="flex pt-4 items-center justify-between">
                                            <button onclick="deleteAccount()"
                                                class="  bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
                                                Delete Account
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <% }); %>

                        </div>
</body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.2.1/axios.min.js"></script>

<script>
    async function updateForm() {
        // Prevent the default form submission
        const username = document.getElementById("username").value;
        const email = document.getElementById("email").value;
    
        const token = document.getElementById("token").value;
        const config = {
            headers: {
                "Content-Type": "application/json",
                Authorization: `Bearer ${token}`,

            },
        };
        // Replace 'your-api-endpoint' with the actual login API endpoint
        try {


            const apiUrl = 'http://localhost:3000/api/users/update';

            // Create a request object

            // Make the API request
            const result = await axios.post(apiUrl, {username, email}, config)
            if (result.status === 200) {
                alert("User Updated Successfully");
                window.location.reload();
            }
        }
        catch (err) {
            console.log(err)
            alert(err.response.data);
        }
    };

    async function updatePassword() {
        // Prevent the default form submission
        const email = document.getElementById("email").value;
        const oldPassword = document.getElementById("password").value;
        const newPassword = document.getElementById("newPassword").value;
        console.log(oldPassword,newPassword)
        const token = document.getElementById("token").value;
        if (!oldPassword || !newPassword) {
            alert("both cannot be empty");
            return;
        }
        const config = {
            headers: {
                "Content-Type": "application/json",
                Authorization: `Bearer ${token}`,

            },
        };
        // Replace 'your-api-endpoint' with the actual login API endpoint
        try {


            const apiUrl = 'http://localhost:3000/api/users/updatePassword';

            // Create a request object

            // Make the API request
            const result = await axios.post(apiUrl, { email,oldPassword, newPassword}, config)
            if (result.status === 200) {
                alert("Password Successfully Updated");
                window.location.reload();
            }
        }
        catch (err) {
            console.log(err)
            alert(err.response.data.msg);
        }
    };
    async function deleteAccount() {
        // Prevent the default form submission
        const email = document.getElementById("email").value;
        const token = document.getElementById("token").value;
        const config = {
            headers: {
                "Content-Type": "application/json",
                Authorization: `Bearer ${token}`,

            },
        };
        // Replace 'your-api-endpoint' with the actual login API endpoint
        try {


            const apiUrl = 'http://localhost:3000/api/users/delete';

            // Create a request object

            // Make the API request
            const result = await axios.post(apiUrl, {email}, config)
            if (result.status === 200) {
                alert("Deleted Account Successfully");
                window.location.href = "/";
            }
        }
        catch (err) {
            console.log(err)
            alert(err.response.data);
        }
    };


</script>

</html>